/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Componente.Vista;
import controller.Cocina;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.text.SimpleAttributeSet;
import model.ProductoPedido;

/**
 *
 * @author USER
 */
public class VentanaGaleria extends javax.swing.JFrame implements Observer {

    private Cocina gestorListaCocina;
    private ArrayList<Object[]> fotos;
    private int n;
    private String rut;
    private String det;
    private int x;
    private int y;
    private static String rutaImagen;
    private boolean ban;
    private img c;
    private VentanaRegistrarPedido ven;
    private boolean vint;
    private Vista vis;
    private VentanaSubirImagen ventana;
    private VentanaRegistrarPedido ventanaRP;
    private VentanaReporte ventanaR;
    private double can;

    //******pendientes*****
    // *cambiar la ruta de guardado de imagen en Ventana Subir Img
    /**
     * Creates new form VentanaGaleria
     */
    public VentanaGaleria() {
        initComponents();
        rut = "";
        det = "";
        ban = false;
        rutaImagen = "";
        vint = false;
        vis = new Vista();
        ventana = new VentanaSubirImagen();
        ventanaRP = new VentanaRegistrarPedido();
        ventanaR = new VentanaReporte(this, false);
        can = 0;

    }

    public void setGestorListaCocina(Cocina gestorListaCocina) {
        this.gestorListaCocina = gestorListaCocina;
        setIconImage(gestorListaCocina.Icono());
        ventana.setGestorListaCocina(gestorListaCocina);
        ventanaRP.setGestorListaCocina(gestorListaCocina);
        ventanaR.setGestorListaCocina(gestorListaCocina);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popuMenu = new javax.swing.JPopupMenu();
        minModificar = new javax.swing.JMenuItem();
        minRemover = new javax.swing.JMenuItem();
        minRefrescar = new javax.swing.JMenuItem();
        minMover = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        lblImgGrand = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbxAlbum = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaDetalle = new javax.swing.JTextPane();
        btnPedido = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnReporte = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        minModificar.setText("Modificar");
        minModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minModificarActionPerformed(evt);
            }
        });
        popuMenu.add(minModificar);

        minRemover.setText("Remover");
        minRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRemoverActionPerformed(evt);
            }
        });
        popuMenu.add(minRemover);

        minRefrescar.setText("Refrescar");
        minRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRefrescarActionPerformed(evt);
            }
        });
        popuMenu.add(minRefrescar);

        minMover.setText("Mover");
        minMover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minMoverActionPerformed(evt);
            }
        });
        popuMenu.add(minMover);

        setTitle("Galeria");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImgGrand.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImgGrand.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblImgGrand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImgGrandMouseClicked(evt);
            }
        });
        jPanel1.add(lblImgGrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 400, 400));

        jLabel1.setForeground(new java.awt.Color(98, 50, 35));
        jLabel1.setText("Album:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 485, -1, -1));

        cbxAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAlbumActionPerformed(evt);
            }
        });
        jPanel1.add(cbxAlbum, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 480, 210, -1));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jScrollPane1.setViewportView(jPanel2);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 350, 460));

        txaDetalle.setEditable(false);
        txaDetalle.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(98, 50, 35)), "Detalle", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(98, 50, 35))); // NOI18N
        txaDetalle.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txaDetalle.setForeground(new java.awt.Color(98, 50, 35));
        txaDetalle.setText("\n");
        txaDetalle.setSelectedTextColor(new java.awt.Color(255, 191, 154));
        txaDetalle.setSelectionColor(new java.awt.Color(98, 50, 35));
        jScrollPane2.setViewportView(txaDetalle);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 400, 140));

        btnPedido.setBackground(new java.awt.Color(98, 50, 35));
        btnPedido.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnPedido.setForeground(new java.awt.Color(255, 191, 154));
        btnPedido.setText("Realizar Pedido");
        btnPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedidoActionPerformed(evt);
            }
        });
        jPanel1.add(btnPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 520, 140, -1));

        btnCerrar.setBackground(new java.awt.Color(255, 102, 102));
        btnCerrar.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnCerrar.setForeground(new java.awt.Color(98, 50, 35));
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 520, 90, -1));

        btnReporte.setBackground(new java.awt.Color(98, 50, 35));
        btnReporte.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnReporte.setForeground(new java.awt.Color(255, 191, 154));
        btnReporte.setText("Reporte");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });
        jPanel1.add(btnReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(575, 520, 120, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/imgFondo.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 566));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbxAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAlbumActionPerformed
        if (cbxAlbum.getSelectedIndex() >= 0) {
            mostarFotos();
        }
    }//GEN-LAST:event_cbxAlbumActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        setVisible(false);
        vis.setBan(true);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedidoActionPerformed

        if (ban == false) {
            Object[] cat = gestorListaCocina.getListaAlbum().obtenerReferencia(cbxAlbum.getSelectedIndex(), rut);

            Object opcion = JOptionPane.showInputDialog(null,
                    "¿Con que receta desea realizarlo?", "Receta",
                    JOptionPane.QUESTION_MESSAGE,
                    null, cat,
                    cat[0]
            );

            if (opcion != null) {
                ventanaRP.llenarcbx(this);
                ventanaRP.otProductoFoto(cbxAlbum.getSelectedIndex(), rut, opcion + "", txaDetalle.getText(), can);
                ventanaRP.setVisible(true);
                setVisible(false);
                vint = true;
            }
        } else {
            vis.setBan(true);
            rutaImagen = rut;
            setVisible(false);
            c = new img(ven);

        }


    }//GEN-LAST:event_btnPedidoActionPerformed

    private void minModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minModificarActionPerformed
        ventana.obtenerDatos(this);
        ventana.modificarImg(rut, cbxAlbum.getSelectedIndex());
        ventana.setVisible(true);
        setVisible(false);
        vint = true;
    }//GEN-LAST:event_minModificarActionPerformed

    private void minRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRemoverActionPerformed
        gestorListaCocina.getListaAlbum().removerImagen(cbxAlbum.getSelectedItem() + "", rut);
        mostarFotos();
    }//GEN-LAST:event_minRemoverActionPerformed

    private void lblImgGrandMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImgGrandMouseClicked
        if (evt.getButton() == 3) {
            popuMenu.show(lblImgGrand, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_lblImgGrandMouseClicked

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        Object[] cat = gestorListaCocina.getListaAlbum().obtenerReferencia(cbxAlbum.getSelectedIndex(), rut);

        Object opcion = JOptionPane.showInputDialog(null,
                "Selecciona una referencia", "Referencia",
                JOptionPane.QUESTION_MESSAGE,
                null, cat,
                cat[0]
        );

        if (opcion != null) {
            ventanaR.setVisible(true);
            ventanaR.obtnerReporte(opcion.toString(), 0, rut, -1);
            setVisible(false);
            vint = true;
        }
    }//GEN-LAST:event_btnReporteActionPerformed

    private void minRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRefrescarActionPerformed
        mostarFotos();
    }//GEN-LAST:event_minRefrescarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        vis.setBan(ban);
    }//GEN-LAST:event_formWindowClosing

    private void minMoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minMoverActionPerformed
        Object[] cat = gestorListaCocina.getListaAlbum().obtenerlistaAlbum();
        Object opcion = JOptionPane.showInputDialog(
                null,
                "¿A que Album desea mover?",
                "Album",
                JOptionPane.QUESTION_MESSAGE,
                null, cat, cat[0]
        );

        if (opcion != null) {
            gestorListaCocina.getListaAlbum().moverFotoAlbum(rut,
                    cbxAlbum.getSelectedItem() + "",
                    opcion + ""
            );

            gestorListaCocina.mensaje("Imagen movida corretamente", "Album",0);
            mostarFotos();
        }
    }//GEN-LAST:event_minMoverActionPerformed

    private void mostarFotos() {
        fotos = gestorListaCocina.getListaAlbum().obtenerListaFotos(cbxAlbum.getSelectedIndex());
        jPanel2.removeAll();

        n = 0;
        x = 5;
        y = 10;

        if (fotos.size() > 0) {

            fotos.stream().forEach(list -> {
                JLabel lblImgg = (JLabel) list[0];
                String fott = (String) list[1];
                double cant = (double) list[3];
                String detalle = (String) list[2] + gestorListaCocina.productoDiseño(
                        (ArrayList<ProductoPedido>) list[4],
                        (ArrayList<Object[]>) list[5],
                        (String) list[6],
                        cant
                );

                lblImgg.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent evt) {
                        rut = fott;
                        can = cant;
                        lblImgGrand.setIcon(
                                gestorListaCocina.getFoto(
                                        lblImgGrand.getSize(),
                                        new ImageIcon(fott)
                                )
                        );

                        txaDetalle.setText(detalle);
                        gestorListaCocina.formatoJtexPanel(txaDetalle);
                    }
                });

                jPanel2.add(lblImgg, new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, 100, 100));
                x += 105;

                if (n == 2) {
                    x = 5;
                    y += 105;
                    n = -1;
                }

                n++;
            });

            jPanel1.revalidate();
        }
    }

    public void llenarCombo(Observer ven) {
        vis.addObserver(ven);
        cbxAlbum.removeAllItems();
        gestorListaCocina.getListaAlbum().listaBoxAlbum(cbxAlbum);
        cbxAlbum.setSelectedIndex(0);
    }

    public void abrirImagen(VentanaRegistrarPedido ven) {
        btnPedido.setText("Abrir");
        btnReporte.setEnabled(false);
        setTitle("Abrir imagen");
        llenarCombo(ven);
        ban = true;
        this.ven = ven;
    }

    @Override
    public void update(Observable o, Object arg) {
        if (arg instanceof Boolean && vint == true) {
            setVisible(true);
            vint = false;
        }
    }

    private class img extends Observable {

        img(VentanaRegistrarPedido ven) {
            addObserver(ven);
            this.setChanged();
            this.notifyObservers(rutaImagen);
            this.clearChanged();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaGaleria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaGaleria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaGaleria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaGaleria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaGaleria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnPedido;
    private javax.swing.JButton btnReporte;
    private javax.swing.JComboBox<String> cbxAlbum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblImgGrand;
    private javax.swing.JMenuItem minModificar;
    private javax.swing.JMenuItem minMover;
    private javax.swing.JMenuItem minRefrescar;
    private javax.swing.JMenuItem minRemover;
    private javax.swing.JPopupMenu popuMenu;
    private javax.swing.JTextPane txaDetalle;
    // End of variables declaration//GEN-END:variables
}
