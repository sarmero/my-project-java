/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Componente.Vista;
import controller.Album;
import controller.Cocina;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Observer;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Foto;

/**
 *
 * @author USER
 */
public class VentanaSubirImagen extends javax.swing.JFrame {

    private Cocina gestorListaCocina;
    private String rutaImg;
    private ArrayList<Object[]> listaReferencia;
    private ArrayList<Object[]> listaOtProducto;
    private boolean edit;
    private Vista vis;
    private VentanaVisualisarProducto venPro;

    /**
     * Creates new form VentanaSubirImagen
     */
    public VentanaSubirImagen() {
        initComponents();
        listaReferencia = new ArrayList<>();
        listaOtProducto = new ArrayList();
        edit = false;
        rutaImg = "";
        vis = new Vista();
        venPro = new VentanaVisualisarProducto(this, true);
    }

    public void setGestorListaCocina(Cocina gestorListaCocina) {
        this.gestorListaCocina = gestorListaCocina;
        setIconImage(gestorListaCocina.Icono());
        venPro.setGestorListaCocina(gestorListaCocina);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmeTbl = new javax.swing.JPopupMenu();
        minRem = new javax.swing.JMenuItem();
        minRemAll = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        lblImagen = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaDetalle = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cbxAlbum = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cbxCategoria = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pnlReferencia = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cbxProducto = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtMed = new javax.swing.JTextField();
        btnAlbum = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        pmeTbl.setLabel("Opcion:");

        minRem.setText("Remover");
        minRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRemActionPerformed(evt);
            }
        });
        pmeTbl.add(minRem);

        minRemAll.setText("Remover todo");
        minRemAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRemAllActionPerformed(evt);
            }
        });
        pmeTbl.add(minRemAll);

        setTitle("Imagen");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImagen.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        lblImagen.setForeground(new java.awt.Color(98, 50, 35));
        lblImagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImagen.setText("Click para subir imagen");
        lblImagen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblImagen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImagenMouseClicked(evt);
            }
        });
        jPanel1.add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 80, 200, 200));

        txaDetalle.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(98, 50, 35)), "Detalle", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(98, 50, 35))); // NOI18N
        txaDetalle.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txaDetalle.setForeground(new java.awt.Color(98, 50, 35));
        txaDetalle.setText("sebastian armero Chocolate\nes Harina esecia Esecia\nMosquera Leche Entera normal cilantro\nLeche en polvo Azucar atun\nGenovesa xyz chocolate Esencia xxxxx normal\nchocolate Harina");
        txaDetalle.setSelectedTextColor(new java.awt.Color(255, 191, 154));
        txaDetalle.setSelectionColor(new java.awt.Color(98, 50, 35));
        txaDetalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txaDetalleKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txaDetalle);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 289, 390, 170));

        jButton1.setBackground(new java.awt.Color(98, 50, 35));
        jButton1.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 191, 154));
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 470, -1, -1));

        jButton2.setBackground(new java.awt.Color(255, 191, 154));
        jButton2.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(98, 50, 35));
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 470, -1, -1));

        cbxAlbum.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        cbxAlbum.setForeground(new java.awt.Color(98, 50, 35));
        jPanel1.add(cbxAlbum, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 48, 200, -1));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(98, 50, 35));
        jLabel1.setText("Album:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 26, -1, -1));

        cbxCategoria.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        cbxCategoria.setForeground(new java.awt.Color(98, 50, 35));
        cbxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCategoriaActionPerformed(evt);
            }
        });
        jPanel1.add(cbxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 48, 180, -1));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(98, 50, 35));
        jLabel2.setText("Categoria:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 26, -1, -1));

        pnlReferencia.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(98, 50, 35)), "Referencia", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(98, 50, 35))); // NOI18N
        pnlReferencia.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jScrollPane2.setViewportView(pnlReferencia);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 180, 200));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(98, 50, 35)), "Añadir productos del diseño", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(98, 50, 35))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(98, 50, 35));
        jLabel7.setText("Productos:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 80, -1));

        cbxProducto.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        cbxProducto.setForeground(new java.awt.Color(98, 50, 35));
        cbxProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxProductoActionPerformed(evt);
            }
        });
        jPanel2.add(cbxProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 155, -1));

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(98, 50, 35));
        jLabel8.setText("Medida:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 60, -1, -1));

        txtCant.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txtCant.setForeground(new java.awt.Color(98, 50, 35));
        txtCant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantKeyTyped(evt);
            }
        });
        jPanel2.add(txtCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 84, -1));

        jTable1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(98, 50, 35));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setSelectionBackground(new java.awt.Color(98, 50, 35));
        jTable1.setSelectionForeground(new java.awt.Color(255, 191, 154));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.add(pmeTbl);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(140);
            jTable1.getColumnModel().getColumn(1).setMinWidth(80);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(88);
            jTable1.getColumnModel().getColumn(2).setMinWidth(90);
        }

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 320, 310));

        btnAdd.setBackground(new java.awt.Color(98, 50, 35));
        btnAdd.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 191, 154));
        btnAdd.setText("Añadir");
        btnAdd.setToolTipText("");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel2.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 78, -1, 30));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(98, 50, 35));
        jLabel3.setText("Medida referencia:");
        jLabel3.setToolTipText("");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 30, 120, -1));

        txtMed.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txtMed.setForeground(new java.awt.Color(98, 50, 35));
        txtMed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedKeyTyped(evt);
            }
        });
        jPanel2.add(txtMed, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 25, 150, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 360, 440));

        btnAlbum.setBackground(new java.awt.Color(98, 50, 35));
        btnAlbum.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnAlbum.setForeground(new java.awt.Color(255, 191, 154));
        btnAlbum.setText("Nuevo Album");
        btnAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlbumActionPerformed(evt);
            }
        });
        jPanel1.add(btnAlbum, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 150, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/imgFondoImg.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 797, 521));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblImagenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImagenMouseClicked
        if (cbxAlbum.getItemCount() > 0 && cbxAlbum.getSelectedIndex() >= 0) {
            rutaImg = gestorListaCocina.abrirImagen();

            if (!"".equals(rutaImg)) {
                lblImagen.setText("");
                ImageIcon img = new ImageIcon(rutaImg);
                lblImagen.setIcon(gestorListaCocina.imagenPrevia(img, 200, 200));
            }
        } else {
            gestorListaCocina.mensaje("Por favor Selecione un album", "Imagen",3);
        }
    }//GEN-LAST:event_lblImagenMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        guardar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCategoriaActionPerformed
        if (cbxCategoria.getSelectedIndex() >= 0) {
            listaReferencia = new ArrayList<>();
            llenarPanel();
        }
    }//GEN-LAST:event_cbxCategoriaActionPerformed

    private void cbxProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxProductoActionPerformed

    }//GEN-LAST:event_cbxProductoActionPerformed

    private void txtCantKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantKeyTyped
        gestorListaCocina.consumir(evt, txtCant.getText());
    }//GEN-LAST:event_txtCantKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getButton() == 3) {
            pmeTbl.show(jTable1, evt.getX(), evt.getY());
        }else if (evt.getClickCount() == 2) {
            int row = jTable1.getSelectedRow();
            if (row >= 0) {
                venPro.visualizarProducto(jTable1.getValueAt(row, 0) + "", true);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!txtCant.getText().equals("") && cbxProducto.getSelectedIndex() >= 0) {
            agregarReceta();
        } else {
            JOptionPane.showMessageDialog(null, "Por Favor llena todas las casillas");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void minRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRemActionPerformed
        int row = jTable1.getSelectedRow();
        jTable1.setModel(gestorListaCocina.formatTablaOtProducto(gestorListaCocina.eliminarFila(jTable1, listaOtProducto, row)));
    }//GEN-LAST:event_minRemActionPerformed

    private void minRemAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRemAllActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        jTable1.setModel(modelo);
        listaOtProducto.removeAll(listaOtProducto);
    }//GEN-LAST:event_minRemAllActionPerformed

    private void txtMedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedKeyTyped
        gestorListaCocina.consumir(evt, txtCant.getText());
    }//GEN-LAST:event_txtMedKeyTyped

    private void btnAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlbumActionPerformed
        crearAlbum();
    }//GEN-LAST:event_btnAlbumActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
        vis.setBan(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        vis.setBan(true);
    }//GEN-LAST:event_formWindowClosing

    private void txaDetalleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaDetalleKeyReleased
        if (evt.getKeyChar() == ' ') {
            gestorListaCocina.formatoJtexPanel(txaDetalle);
        }
    }//GEN-LAST:event_txaDetalleKeyReleased

    private void añadirReferencia(String nom) {
        boolean ban = false;
        Object[] ref = new Object[2];
        for (int i = 0; i < listaReferencia.size(); i++) {
            if (nom.equals(listaReferencia.get(i)[0] + "")) {
                if ((boolean) listaReferencia.get(i)[1] == true) {
                    listaReferencia.get(i)[1] = false;
                } else {
                    listaReferencia.get(i)[1] = true;
                }

                ban = true;
                break;
            }
        }

        if (ban == false) {
            ref[0] = nom;
            ref[1] = true;
            listaReferencia.add(ref);
        }
    }

    private boolean referencia(String nom) {
        boolean ban;
        for (int i = 0; i < listaReferencia.size(); i++) {
            if (nom.equals(listaReferencia.get(i)[0] + "")) {
                ban = (boolean) listaReferencia.get(i)[1];
                if (ban == true) {
                    return true;
                }
            }
        }

        return false;

    }

    private String crearAlbum() {
        String respuesta = JOptionPane.showInputDialog(
                null,
                "Ingrese el nombre del Album",
                JOptionPane.QUESTION_MESSAGE
        );

        if (respuesta != null) {
            if (!"".equals(respuesta)) {
                Album album = new Album();
                album.setNombreAlbum(respuesta);
                gestorListaCocina.getListaAlbum().agregarAlbum(album);
                gestorListaCocina.mensaje("Album creado con exito", "Album",0);
                cbxAlbum.removeAllItems();
                gestorListaCocina.getListaAlbum().listaBoxAlbum(cbxAlbum);
                cbxAlbum.setSelectedIndex(cbxAlbum.getItemCount() - 1);
                return respuesta;
            }
        }

        return null;
    }

    private void agregarReceta() {
        int pro = gestorListaCocina.getListaProducto().cantidadProducto();
        int sel = cbxProducto.getSelectedIndex();
        int rec = cbxProducto.getItemCount() - pro;

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        Object[] fila = gestorListaCocina.datosOtProductos(
                sel,
                rec,
                Double.valueOf(txtCant.getText()),
                cbxProducto.getSelectedItem().toString()
        );

        modelo.addRow(fila);
        jTable1.setModel(modelo);
        String cos;

        Object[] fila2 = new Object[3];
        fila2[0] = fila[0];
        for (int i = 1; i <= 2; i++) {
            cos = (fila[i] + "").replace(".", "");
            cos = cos.replace("$ ", "");
            cos = cos.replace(",", ".");
            fila2[i] = Double.valueOf(cos);
        }

        listaOtProducto.add(fila2);
        txtCant.setText("");
    }

    private void llenarPanel() {
        int y = 25;
        Object[] rec = gestorListaCocina.getListaCategoria().nombreReceta(cbxCategoria.getSelectedItem() + "");
        for (int i = 0; i < rec.length; i++) {
            JCheckBox chxRecetass = new JCheckBox(rec[i] + "");
            chxRecetass.setFont(new Font("Comic Sans MS", 0, 12));
            chxRecetass.setForeground(new Color(98, 50, 35));
            chxRecetass.setSelected(referencia(chxRecetass.getText()));

            chxRecetass.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent evt) {
                    añadirReferencia(chxRecetass.getText());
                }
            });

            pnlReferencia.add(chxRecetass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, y, 160, 20));
            y += 25;
        }
        pnlReferencia.revalidate();
    }

    public void obtenerDatos(Observer ven) {
        vis.addObserver(ven);
        cbxAlbum.removeAllItems();
        gestorListaCocina.getListaAlbum().listaBoxAlbum(cbxAlbum);
        cbxCategoria.removeAllItems();
        gestorListaCocina.getListaCategoria().listaBoxCategoria(cbxCategoria);
        cbxProducto.removeAllItems();
        gestorListaCocina.getListaCategoria().listaBoxOtProductos(cbxProducto);
        listaReferencia = new ArrayList<>();
    }

    public void modificarImg(String ruta, int album) {
        edit = true;
        lblImagen = gestorListaCocina.visualizadorImagen(lblImagen, ruta);
        cbxAlbum.setEnabled(false);
        rutaImg = ruta;
        Foto foto = gestorListaCocina.getListaAlbum().obtenerFoto(album, ruta);
        btnAlbum.setEnabled(false);

        listaReferencia = foto.getReferenciaReceta();
        txaDetalle.setText(foto.getDetalle());
        txtMed.setText(foto.getMedReferencia() + "");
        pnlReferencia.removeAll();
        llenarPanel();

        jTable1.setModel(gestorListaCocina.obtenerTablaOtProductoFoto(jTable1, album, ruta));
        listaOtProducto = gestorListaCocina.obtenerListaOtProducto(album, ruta);
    }

    private void guardar() {
        String album;
        String msj = mensaje();
        if (msj.equals("")) {

            album = cbxAlbum.getSelectedItem() + "";
            Foto foto = new Foto();
            String ruta;

            foto.setDetalle(txaDetalle.getText());
            foto.setReferenciaReceta(listaReferencia);

            if (listaOtProducto.size() > 0) {
                foto.setOtProductos(gestorListaCocina.ConvertirOtProducto(listaOtProducto));
                foto.setMedReferencia(Double.valueOf((txtMed.getText()).replace(",", ".")));
            }

            ImageIcon fot = new ImageIcon(rutaImg);
            String nomImg = gestorListaCocina.getListaAlbum().numeroFotos(album) + ".png";
            String nruta = "Album/" + album + "/img" + nomImg;

            ruta = gestorListaCocina.getRutaArchivo();
            gestorListaCocina.setRutaArchivo(ruta + "Album/");

            if (fot.getIconWidth() >= 1000 || fot.getIconHeight() >= 1000) {
                gestorListaCocina.cambiarTamañoImage(rutaImg, nruta, (fot.getIconWidth() / 2), (fot.getIconHeight() / 2));
                rutaImg = gestorListaCocina.getRutaArchivo() + nruta;
            } else {
                rutaImg = gestorListaCocina.copiarFichero("image" + gestorListaCocina.getListaAlbum().numeroFotos(album), rutaImg, album);
            }

            foto.setRuta(rutaImg);
            System.out.println("ruta img: " + rutaImg);
            gestorListaCocina.setRutaArchivo(ruta);

            if (edit == false) {
                gestorListaCocina.getListaAlbum().agregarFoto(cbxAlbum.getSelectedIndex(), foto);
                gestorListaCocina.mensaje("Imagen añadida corretamente", album,0);
            } else {
                gestorListaCocina.getListaAlbum().modificarImagen(album, foto);
                gestorListaCocina.mensaje("Imagen modificada corretamente", album,0);
            }

            setVisible(false);
            vis.setBan(true);
        } else {
            gestorListaCocina.mensaje(msj, "Imagen",3);
        }
    }

    private String mensaje() {
        if (rutaImg.equals("")) {
            return "Por favor Selecione una Imagen";
        } else if (listaOtProducto.size() > 0 && txtMed.getText().equals("")) {
            return "la casilla ''Medida referencia'' es obligatoria";
        } else if (verificarReferencia() == false) {
            return "Debe marcar por lo menos una referencia";
        }

        return "";
    }

    private boolean verificarReferencia() {
        for (int i = 0; i < listaReferencia.size(); i++) {
            if ((boolean) listaReferencia.get(i)[1] == true) {
                return true;
            }
        }
        return false;
    }

    public void crearAlbumnesPruebas() {
        Album album = new Album();
        album.setNombreAlbum("Tortas");
        album.setFotos(obtenerRutaPrueba(0, 16));
        gestorListaCocina.getListaAlbum().agregarAlbum(album);

        album = new Album();
        album.setNombreAlbum("Pastel");
        album.setFotos(obtenerRutaPrueba(17, 34));
        gestorListaCocina.getListaAlbum().agregarAlbum(album);

    }

    private ArrayList<Foto> obtenerRutaPrueba(int des, int asta) {
        ArrayList<Foto> ruta = new ArrayList<>();
        Foto foto;
        for (int i = des; i < asta; i++) {
            foto = new Foto();
            foto.setRuta("C:/Users/USER/Documents/imagen/image" + i + ".png");
            ruta.add(foto);
        }

        return ruta;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaSubirImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaSubirImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaSubirImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaSubirImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaSubirImagen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAlbum;
    private javax.swing.JComboBox<String> cbxAlbum;
    private javax.swing.JComboBox<String> cbxCategoria;
    private javax.swing.JComboBox<String> cbxProducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JMenuItem minRem;
    private javax.swing.JMenuItem minRemAll;
    private javax.swing.JPopupMenu pmeTbl;
    private javax.swing.JPanel pnlReferencia;
    private javax.swing.JTextPane txaDetalle;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtMed;
    // End of variables declaration//GEN-END:variables
}
