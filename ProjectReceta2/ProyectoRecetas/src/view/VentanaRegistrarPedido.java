/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Componente.Vista;
import controller.Cocina;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Pedido;

/**
 *
 * @author USER
 */
public class VentanaRegistrarPedido extends javax.swing.JFrame implements Observer {

    private Cocina gestorListaCocina;
    private String rutaFile;
    private ArrayList<Object[]> listaOtProducto;
    private boolean edit;
    private int vent;
    private VentanaGaleria galeria;
    private Vista vis;
    private boolean vint;
    private VentanaVisualisarProducto venPro;
    private boolean estado;
    private int codigo;

    /**
     * Creates new form VentanaVentas
     */
    public VentanaRegistrarPedido() {
        initComponents();
        listaOtProducto = new ArrayList();
        rutaFile = "";
        edit = false;
        vint = false;
        vent = 0;
        vis = new Vista();
        venPro = new VentanaVisualisarProducto(this, true);
    }

    public void setGestorListaCocina(Cocina gestorListaCocina) {
        this.gestorListaCocina = gestorListaCocina;
        setIconImage(gestorListaCocina.Icono());
        venPro.setGestorListaCocina(gestorListaCocina);
    }

    public void setGaleria(VentanaGaleria galeria) {
        this.galeria = galeria;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmeTbl = new javax.swing.JPopupMenu();
        minRem = new javax.swing.JMenuItem();
        minRemAll = new javax.swing.JMenuItem();
        pmeImage = new javax.swing.JPopupMenu();
        minGaleria = new javax.swing.JMenuItem();
        minArchivo = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        cbxCategoria = new javax.swing.JComboBox<>();
        cbxReceta = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        lblImage = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cbxProducto = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaNota = new javax.swing.JTextPane();
        txtPrecio = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dteDecha = new com.toedter.calendar.JDateChooser();
        lblCosto = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cbxCliente = new javax.swing.JComboBox<>();
        lblFondo = new javax.swing.JLabel();

        pmeTbl.setLabel("Opcion:");

        minRem.setText("Remover");
        minRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRemActionPerformed(evt);
            }
        });
        pmeTbl.add(minRem);

        minRemAll.setText("Remover todo");
        minRemAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRemAllActionPerformed(evt);
            }
        });
        pmeTbl.add(minRemAll);

        pmeTbl.setLabel("Opcion:");

        minGaleria.setText("Desde Galeria");
        minGaleria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minGaleriaActionPerformed(evt);
            }
        });
        pmeImage.add(minGaleria);

        minArchivo.setText("Desde Archivos");
        minArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minArchivoActionPerformed(evt);
            }
        });
        pmeImage.add(minArchivo);

        setTitle("Registrar Pedido");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 191, 154));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbxCategoria.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        cbxCategoria.setForeground(new java.awt.Color(98, 50, 35));
        cbxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCategoriaActionPerformed(evt);
            }
        });
        jPanel1.add(cbxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 190, -1));

        cbxReceta.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        cbxReceta.setForeground(new java.awt.Color(98, 50, 35));
        cbxReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxRecetaActionPerformed(evt);
            }
        });
        jPanel1.add(cbxReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 190, -1));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(98, 50, 35));
        jLabel2.setText("Categoria:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(98, 50, 35));
        jLabel3.setText("Receta:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(98, 50, 35));
        jLabel4.setText("Cliente:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(98, 50, 35));
        jLabel6.setText("Cantidad:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        txtCantidad.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txtCantidad.setForeground(new java.awt.Color(98, 50, 35));
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });
        jPanel1.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 190, -1));

        lblImage.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        lblImage.setForeground(new java.awt.Color(98, 50, 35));
        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setText("Click para añadir diseño");
        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblImage.setComponentPopupMenu(pmeImage);
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImageMouseClicked(evt);
            }
        });
        jPanel1.add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 200, 200));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(98, 50, 35)), "Otros Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(98, 50, 35))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(98, 50, 35));
        jLabel7.setText("Productos:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 80, -1));

        cbxProducto.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        cbxProducto.setForeground(new java.awt.Color(98, 50, 35));
        jPanel2.add(cbxProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 155, -1));

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(98, 50, 35));
        jLabel8.setText("Cantidad:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 20, -1, -1));

        txtCant.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txtCant.setForeground(new java.awt.Color(98, 50, 35));
        txtCant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantKeyTyped(evt);
            }
        });
        jPanel2.add(txtCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 84, -1));

        jTable1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(98, 50, 35));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setSelectionBackground(new java.awt.Color(98, 50, 35));
        jTable1.setSelectionForeground(new java.awt.Color(255, 191, 154));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.add(pmeTbl);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(140);
            jTable1.getColumnModel().getColumn(1).setMinWidth(80);
            jTable1.getColumnModel().getColumn(2).setMinWidth(88);
        }

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 310, 130));

        btnAdd.setBackground(new java.awt.Color(98, 50, 35));
        btnAdd.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 191, 154));
        btnAdd.setText("Añadir");
        btnAdd.setToolTipText("");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel2.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 38, -1, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 350, 210));

        btnGuardar.setBackground(new java.awt.Color(98, 50, 35));
        btnGuardar.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 191, 154));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 580, 90, -1));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(98, 50, 35)), "Detalle", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(98, 50, 35))); // NOI18N

        txaNota.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txaNota.setForeground(new java.awt.Color(98, 50, 35));
        txaNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txaNotaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txaNota);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 560, 210));

        txtPrecio.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txtPrecio.setForeground(new java.awt.Color(98, 50, 35));
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped1(evt);
            }
        });
        jPanel1.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 160, -1));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(98, 50, 35));
        jLabel1.setText("Valor Pedido:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, -1, -1));

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(98, 50, 35));
        jLabel9.setText("Fecha:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(374, 60, -1, -1));

        dteDecha.setForeground(new java.awt.Color(98, 50, 35));
        dteDecha.setDateFormatString("dd/MM/yyyy");
        dteDecha.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jPanel1.add(dteDecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, 160, 25));

        lblCosto.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblCosto.setForeground(new java.awt.Color(98, 50, 35));
        lblCosto.setText("Costo total: $ ");
        jPanel1.add(lblCosto, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 580, 320, -1));

        jButton1.setBackground(new java.awt.Color(255, 153, 153));
        jButton1.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(98, 50, 35));
        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 580, 80, -1));

        jPanel1.add(cbxCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 160, -1));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/imgFondoVentaR.png"))); // NOI18N
        jPanel1.add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 620));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCategoriaActionPerformed
        cbxReceta.removeAllItems();
        gestorListaCocina.getListaCategoria().listaBoxReceta(cbxReceta, cbxCategoria.getSelectedIndex());
    }//GEN-LAST:event_cbxCategoriaActionPerformed

    private void cbxRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxRecetaActionPerformed
        if (cbxReceta.getSelectedIndex() >= 0) {
            obtenerCosto();
        }
    }//GEN-LAST:event_cbxRecetaActionPerformed

    private void lblImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseClicked
        pmeImage.show(lblImage, evt.getX(), evt.getY());
    }//GEN-LAST:event_lblImageMouseClicked

    private void txtCantKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantKeyTyped
        gestorListaCocina.consumir(evt, txtCant.getText());
    }//GEN-LAST:event_txtCantKeyTyped

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!txtCant.getText().equals("") && cbxProducto.getSelectedIndex() >= 0) {
            agregarReceta();
        } else {
            JOptionPane.showMessageDialog(null, "Por Favor llena todas las casillas");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void minRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRemActionPerformed
        int row = jTable1.getSelectedRow();
        jTable1.setModel(gestorListaCocina.formatTablaOtProducto(gestorListaCocina.eliminarFila(jTable1, listaOtProducto, row)));
        obtenerCosto();
    }//GEN-LAST:event_minRemActionPerformed

    private void minRemAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRemAllActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        jTable1.setModel(modelo);
        listaOtProducto.removeAll(listaOtProducto);
        obtenerCosto();
    }//GEN-LAST:event_minRemAllActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        gestorListaCocina.consumir(evt, txtCantidad.getText());
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!txtPrecio.getText().equals("") && !txtCantidad.getText().equals("")) {
            guardarVenta();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtPrecioKeyTyped1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped1
        gestorListaCocina.consumir(evt, txtPrecio.getText());
    }//GEN-LAST:event_txtPrecioKeyTyped1

    private void txtCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyReleased
        obtenerCosto();
    }//GEN-LAST:event_txtCantidadKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
        vis.setBan(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void minGaleriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minGaleriaActionPerformed
        galeria = new VentanaGaleria();
        galeria.setGestorListaCocina(gestorListaCocina);
        galeria.setVisible(true);
        galeria.abrirImagen(this);
        setVisible(false);
        vint = true;
    }//GEN-LAST:event_minGaleriaActionPerformed

    private void minArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minArchivoActionPerformed
        rutaFile = gestorListaCocina.abrirImagen();
        lblImage = gestorListaCocina.visualizadorImagen(lblImage, rutaFile);
    }//GEN-LAST:event_minArchivoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        vis.setBan(true);
    }//GEN-LAST:event_formWindowClosing

    private void txaNotaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaNotaKeyReleased
        if (evt.getKeyChar() == ' ') {
            gestorListaCocina.formatoJtexPanel(txaNota);
        }
    }//GEN-LAST:event_txaNotaKeyReleased

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        if (evt.getButton() == 3) {
            pmeTbl.show(jTable1, evt.getX(), evt.getY());
        } else if (evt.getClickCount() == 2) {
            int row = jTable1.getSelectedRow();
            if (row >= 0) {
                venPro.visualizarProducto(jTable1.getValueAt(row, 0) + "", true);
            }
        }
    }//GEN-LAST:event_jTable1MouseReleased

    public void llenarcbx(Observer ven) {
        vis.addObserver(ven);
        cbxProducto.removeAllItems();
        cbxCategoria.removeAllItems();
        cbxCliente.removeAllItems();
        gestorListaCocina.getListaCliente().lisaCliente(cbxCliente);
        gestorListaCocina.getListaCategoria().listaBoxOtProductos(cbxProducto);
        gestorListaCocina.getListaCategoria().listaBoxCategoria(cbxCategoria);
    }

    private void obtenerCosto() {
        int cat = cbxCategoria.getSelectedIndex();
        int rec = cbxReceta.getSelectedIndex();
        double cant;
        if (txtCantidad.getText().length() > 0) {
            cant = Double.valueOf(txtCantidad.getText());
        } else {
            cant = 0;
        }

        lblCosto.setText("Costo total: " + gestorListaCocina.costoPedido(cat, rec, cant, listaOtProducto));
    }

    private void guardarVenta() {
        Pedido ven;
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        jTable1.setModel(modelo);
        String costo;

        ven = new Pedido();

        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerRecet(cbxCategoria.getSelectedIndex(), cbxReceta.getSelectedIndex()));
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente(cbxCliente.getSelectedItem().toString()));
        ven.setPrecioVenta(Double.valueOf(txtPrecio.getText()));
        ven.setCantidad(Double.valueOf(txtCantidad.getText()));
        ven.setNota(txaNota.getText());
        ven.setRuta(rutaFile);
        costo = lblCosto.getText().replace("Costo total: $ ", "");
        costo = costo.replace(".", "");
        ven.setValorGasto(Double.valueOf(costo.replace(",", ".")));

        ven.setOtProductos(gestorListaCocina.ConvertirOtProducto(listaOtProducto));

        SimpleDateFormat fecha = new SimpleDateFormat("dd/MM/YYYY");
        ven.setFechaEntrega(fecha.format(dteDecha.getDate()));

        if (edit == false) {
            gestorListaCocina.getListaPedido().agregarVenta(ven);
            gestorListaCocina.mensaje("Pedidos Guardada Corretamente", "Pedido",0);

        } else {
            ven.setEstado(estado);
            ven.setCodigo(codigo);
            gestorListaCocina.getListaPedido().editarVenta(ven, vent);
            gestorListaCocina.mensaje("Pedidos modificada Corretamente", "Pedido",0);
            gestorListaCocina.cargarInventario();
        }

        vis.setBan(true);
        setVisible(false);
        txtCantidad.setText("");
        txtPrecio.setText("");
    }

    private void agregarReceta() {
        int pro = gestorListaCocina.getListaProducto().cantidadProducto();
        int sel = cbxProducto.getSelectedIndex();
        int rec = cbxProducto.getItemCount() - pro;

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        Object[] fila = gestorListaCocina.datosOtProductos(
                sel,
                rec,
                Double.valueOf(txtCant.getText()),
                cbxProducto.getSelectedItem().toString()
        );

        modelo.addRow(fila);
        jTable1.setModel(modelo);
        String cos;

        Object[] fila2 = new Object[3];
        fila2[0] = fila[0];
        for (int i = 1; i <= 2; i++) {
            cos = (fila[i] + "").replace(".", "");
            cos = cos.replace("$ ", "");
            cos = cos.replace(",", ".");
            fila2[i] = Double.valueOf(cos);
        }

        listaOtProducto.add(fila2);

        txtCant.setText("");
        obtenerCosto();

    }

    public void otProductoFoto(int idxAlbum, String ruta, String receta, String detalle, double cant) {
        txaNota.setText(detalle);
        gestorListaCocina.formatoJtexPanel(txaNota);
        txtCantidad.setText(cant + "");
        minGaleria.setEnabled(false);
        minArchivo.setEnabled(false);
        marcarReceta(receta);
        jTable1.setModel(gestorListaCocina.obtenerTablaOtProductoFoto(jTable1, idxAlbum, ruta));
        lblImage = gestorListaCocina.visualizadorImagen(lblImage, ruta);
        cbxCategoria.setEnabled(false);
        cbxReceta.setEnabled(false);
        rutaFile = ruta;
        listaOtProducto = gestorListaCocina.obtenerListaOtProducto(idxAlbum, ruta);
        obtenerCosto();
    }

    private void marcarReceta(String receta) {
        boolean ban = false;
        for (int i = 0; i < cbxCategoria.getItemCount(); i++) {
            cbxCategoria.setSelectedIndex(i);
            for (int j = 0; j < cbxReceta.getItemCount(); j++) {
                cbxReceta.setSelectedIndex(j);
                if (receta.equals(cbxReceta.getSelectedItem() + "")) {
                    ban = true;
                    break;
                }
            }

            if (ban == true) {
                break;
            }
        }
    }

    public void editarVenta(int idxVenta) {
        setTitle("Editar Pedido");
        btnGuardar.setText("Editar");
        edit = true;
        vent = idxVenta;
        cbxCategoria.setEnabled(false);
        cbxReceta.setEnabled(false);

        Object[] venta = gestorListaCocina.getListaPedido().obtenerVenta(idxVenta);

        marcarReceta((String) venta[0]);
        estado = (boolean) venta[4];
        codigo = (int) venta[11];
        txtCantidad.setText(venta[3] + "");
        txaNota.setText(venta[7] + "");
        gestorListaCocina.formatoJtexPanel(txaNota);

        for (int i = 0; i < cbxCliente.getItemCount(); i++) {
            if (cbxCliente.getItemAt(i).equals(venta[1])) {
                cbxCliente.setSelectedIndex(i);
                break;
            }
        }

        txtPrecio.setText(venta[2] + "");
        lblImage = gestorListaCocina.visualizadorImagen(lblImage, venta[6] + "");
        obtenerCosto();
        dteDecha.setDate(new Date((venta[9] + "")));

        jTable1.setModel(gestorListaCocina.obtenerTablaOtProducto(jTable1, idxVenta));
        listaOtProducto = gestorListaCocina.obtenerListaOtProducto(idxVenta);
    }

    @Override
    public void update(Observable o, Object arg) {

        if (arg instanceof Boolean && vint == true) {
            setVisible(true);
            vint = false;
        } else if (arg instanceof String) {
            if (!((String) arg).equals("")) {
                rutaFile = (String) arg;
                lblImage = gestorListaCocina.visualizadorImagen(lblImage, (String) arg);
            }
        }

    }

    public void pruebaVenta() {
        Pedido ven;
        boolean est = true;

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Mario"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Genovesa"));
        ven.setCantidad(250);
        ven.setPrecioVenta(65000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("30/12/2022");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Juan"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Genovesa"));
        ven.setCantidad(500);
        ven.setPrecioVenta(50000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("31/12/2022");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Maria"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Normal"));
        ven.setCantidad(1000);
        ven.setPrecioVenta(110000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("16/12/2022");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Pedro"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Genovesa"));
        ven.setCantidad(250);
        ven.setPrecioVenta(27000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("18/12/2022");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Ana"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Genovesa"));
        ven.setCantidad(500);
        ven.setPrecioVenta(65000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("29/12/2022");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Stiven"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Normal"));
        ven.setCantidad(125);
        ven.setPrecioVenta(7000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("10/12/2022");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Dario"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Normal"));
        ven.setCantidad(500);
        ven.setPrecioVenta(50000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("20/12/2022");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Julia"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Genovesa"));
        ven.setCantidad(500);
        ven.setPrecioVenta(45000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("08/12/2022");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        //nuevos
        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Maria"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Tres leche"));
        ven.setCantidad(250);
        ven.setPrecioVenta(50000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("31/12/2022");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Juan"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Bizcocho Marmolado"));
        ven.setCantidad(500);
        ven.setPrecioVenta(40000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/01/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Ana"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Pan de sal"));
        ven.setCantidad(1799);
        ven.setPrecioVenta(28000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/02/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Dario"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Genovesa"));
        ven.setCantidad(250);
        ven.setPrecioVenta(50000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/03/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Mario"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Tres leche"));
        ven.setCantidad(125);
        ven.setPrecioVenta(20000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/04/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Dilan"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Pan mantequilla"));
        ven.setCantidad(12127.5);
        ven.setPrecioVenta(192500);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/05/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Roberto"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Pan mantequilla"));
        ven.setCantidad(13230);
        ven.setPrecioVenta(210000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/07/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Pablo"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Tres leche"));
        ven.setCantidad(750);
        ven.setPrecioVenta(60000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/06/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Stiven"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Tres leche"));
        ven.setCantidad(1000);
        ven.setPrecioVenta(80000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/08/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Dario"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Pan de sal"));
        ven.setCantidad(5397);
        ven.setPrecioVenta(84000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/09/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Julia"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Bizcocho Marmolado"));
        ven.setCantidad(750);
        ven.setPrecioVenta(60000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/10/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Diego"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Bizcocho Marmolado"));
        ven.setCantidad(500);
        ven.setPrecioVenta(40000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/11/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);
        
        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Antonia"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Genovesa"));
        ven.setCantidad(125);
        ven.setPrecioVenta(25000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/12/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);
        
        ven = new Pedido();
        ven.setCodCliente(gestorListaCocina.getListaCliente().obtenerCodigoCliente("Karen"));
        ven.setReceta(gestorListaCocina.getListaCategoria().obtenerReceta("Pan de sal"));
        ven.setCantidad(29233.75);
        ven.setPrecioVenta(455000);
        ven.setValorGasto(gestorListaCocina.getListaCategoria().obtenerCostoReceta(ven.getReceta()) * ven.getCantidad());
        ven.setFechaEntrega("01/13/2023");
        ven.setEstado(est);
        gestorListaCocina.getListaPedido().agregarVenta(ven);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaRegistrarPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbxCategoria;
    private javax.swing.JComboBox<String> cbxCliente;
    private javax.swing.JComboBox<String> cbxProducto;
    private javax.swing.JComboBox<String> cbxReceta;
    private com.toedter.calendar.JDateChooser dteDecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCosto;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblImage;
    private javax.swing.JMenuItem minArchivo;
    private javax.swing.JMenuItem minGaleria;
    private javax.swing.JMenuItem minRem;
    private javax.swing.JMenuItem minRemAll;
    private javax.swing.JPopupMenu pmeImage;
    private javax.swing.JPopupMenu pmeTbl;
    private javax.swing.JTextPane txaNota;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

}
