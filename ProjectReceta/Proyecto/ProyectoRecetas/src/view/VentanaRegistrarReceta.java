/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Componente.Vista;
import controller.Cocina;
import controller.Categoria;
import java.util.ArrayList;
import java.util.Observer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ProductoReceta;
import model.Receta;

/**
 *
 * @author USER
 */
public class VentanaRegistrarReceta extends javax.swing.JFrame {

    private Cocina gestorListaCocina;
    private ArrayList<Object[]> listPrecio;
    private int interator;
    private String rutaFile;
    private boolean edit;
    private int cat, rece;
    private Vista vis;
    private int codigoRec;

    /**
     * Creates new form VentanaRegistrarReceta
     */
    public VentanaRegistrarReceta() {
        initComponents();
        listPrecio = new ArrayList();
        rutaFile = "";
        interator = 1;
        edit = false;
        cat = 0;
        rece = 0;
        vis = new Vista();
    }

    public void setGestorListaCocina(Cocina gestorListaCocina) {
        this.gestorListaCocina = gestorListaCocina;
        setIconImage(gestorListaCocina.Icono());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmeTbl = new javax.swing.JPopupMenu();
        minRem = new javax.swing.JMenuItem();
        minRemAll = new javax.swing.JMenuItem();
        minEditar = new javax.swing.JMenuItem();
        popuTxp = new javax.swing.JPopupMenu();
        minPaso = new javax.swing.JMenuItem();
        minLimpiar = new javax.swing.JMenuItem();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMedida = new javax.swing.JTextField();
        cbxProducto = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaPanel = new javax.swing.JTextPane();
        lblImgReceta = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbxCategoria = new javax.swing.JComboBox<>();
        txtReceta = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        chxComplemento = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        txtMedReceta = new javax.swing.JTextField();
        rbtSuma = new javax.swing.JRadioButton();
        lblFondo = new javax.swing.JLabel();

        pmeTbl.setLabel("Opcion:");

        minRem.setText("Remover");
        minRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRemActionPerformed(evt);
            }
        });
        pmeTbl.add(minRem);

        minRemAll.setText("Remover todo");
        minRemAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRemAllActionPerformed(evt);
            }
        });
        pmeTbl.add(minRemAll);

        minEditar.setText("Editar Medida");
        minEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minEditarActionPerformed(evt);
            }
        });
        pmeTbl.add(minEditar);

        popuTxp.setName("Opcion:"); // NOI18N

        minPaso.setText("Add Paso");
        minPaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minPasoActionPerformed(evt);
            }
        });
        popuTxp.add(minPaso);

        minLimpiar.setText("Limpiar");
        minLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minLimpiarActionPerformed(evt);
            }
        });
        popuTxp.add(minLimpiar);

        jLabel5.setText("jLabel5");

        setTitle("AÃ±adir receta");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setToolTipText("preferencia 200 x 200");
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(98, 50, 35));
        jLabel2.setText("Medida:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(98, 50, 35));
        jLabel3.setText("Productos:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 80, -1));

        txtMedida.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txtMedida.setForeground(new java.awt.Color(98, 50, 35));
        txtMedida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedidaKeyTyped(evt);
            }
        });
        jPanel1.add(txtMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 110, -1));

        cbxProducto.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        cbxProducto.setForeground(new java.awt.Color(98, 50, 35));
        jPanel1.add(cbxProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 180, -1));

        btnAdd.setBackground(new java.awt.Color(98, 50, 35));
        btnAdd.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 191, 154));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 60, 25));

        jTable1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(98, 50, 35));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Medida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionBackground(new java.awt.Color(98, 50, 35));
        jTable1.setSelectionForeground(new java.awt.Color(255, 191, 154));
        jTable1.add(pmeTbl);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 260, 200));

        btnGuardar.setBackground(new java.awt.Color(98, 50, 35));
        btnGuardar.setForeground(new java.awt.Color(255, 191, 154));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 530, 80, -1));

        btnSalir.setBackground(new java.awt.Color(255, 153, 153));
        btnSalir.setForeground(new java.awt.Color(98, 50, 35));
        btnSalir.setText("Cerrar");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 530, 90, -1));

        //txaPanel.add(pmeTbl);
        txaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(98, 50, 35)), "Preparacio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(98, 50, 35))); // NOI18N
        txaPanel.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txaPanel.setForeground(new java.awt.Color(98, 50, 35));
        txaPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txaPanelMouseClicked(evt);
            }
        });
        txaPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txaPanelKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txaPanel);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 490, 180));

        lblImgReceta.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        lblImgReceta.setForeground(new java.awt.Color(98, 50, 35));
        lblImgReceta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImgReceta.setText("Click para aÃ±adir imagen");
        lblImgReceta.setToolTipText("preferencia 200 x 200");
        lblImgReceta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblImgReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImgRecetaMouseClicked(evt);
            }
        });
        jPanel1.add(lblImgReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 200, 200));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 204));
        jLabel1.setText("Receta:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 255, 204));
        jLabel4.setText("Categoria:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        cbxCategoria.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        cbxCategoria.setForeground(new java.awt.Color(98, 50, 35));
        jPanel2.add(cbxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 10, 170, -1));

        txtReceta.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txtReceta.setForeground(new java.awt.Color(98, 50, 35));
        jPanel2.add(txtReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 170, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/imgFondo2.png"))); // NOI18N
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 530, -1));

        chxComplemento.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        chxComplemento.setForeground(new java.awt.Color(98, 50, 35));
        chxComplemento.setText("AÃ±adidura");
        chxComplemento.setToolTipText("tipo de receta");
        jPanel1.add(chxComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 520, -1, -1));

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(98, 50, 35));
        jLabel6.setText("Medida Receta: ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        txtMedReceta.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        txtMedReceta.setForeground(new java.awt.Color(98, 50, 35));
        txtMedReceta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedRecetaKeyTyped(evt);
            }
        });
        jPanel1.add(txtMedReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 90, -1));

        rbtSuma.setFont(new java.awt.Font("Comic Sans MS", 1, 10)); // NOI18N
        rbtSuma.setForeground(new java.awt.Color(98, 50, 35));
        rbtSuma.setText("sumar medidas de los productos");
        rbtSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSumaActionPerformed(evt);
            }
        });
        jPanel1.add(rbtSuma, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 95, 200, -1));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/imgFondoReceta.png"))); // NOI18N
        jPanel1.add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 570));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!txtReceta.getText().equals("") && !txtMedReceta.getText().equals("") && cbxCategoria.getSelectedIndex() >= 0) {
            guardarReceta();
        } else {
            JOptionPane.showMessageDialog(null, "Por Favor llena todas las casillas");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtMedidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedidaKeyTyped
        gestorListaCocina.consumir(evt, txtMedida.getText());
    }//GEN-LAST:event_txtMedidaKeyTyped

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!txtMedida.getText().equals("") && cbxProducto.getSelectedIndex() >= 0) {
            agregar();
        } else {
            JOptionPane.showMessageDialog(null, "Por Favor llena todas las casillas");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void minRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRemActionPerformed
        int row = jTable1.getSelectedRow();
        if (jTable1.getSelectedRowCount() > 0) {
            jTable1.setModel(gestorListaCocina.eliminarFila(jTable1, listPrecio, row));
            if (rbtSuma.isSelected() == true) {
                txtMedReceta.setText(sumarMedidas() + "");
            }
        }
    }//GEN-LAST:event_minRemActionPerformed

    private void minRemAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRemAllActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        jTable1.setModel(modelo);
        listPrecio.removeAll(listPrecio);
        if (rbtSuma.isSelected() == true) {
            txtMedReceta.setText(sumarMedidas() + "");
        }
    }//GEN-LAST:event_minRemAllActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getButton() == 3) {
            pmeTbl.show(jTable1, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void txaPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txaPanelMouseClicked
        if (evt.getButton() == 3) {
            popuTxp.show(txaPanel, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_txaPanelMouseClicked

    private void minPasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minPasoActionPerformed
        txaPanel.setText(txaPanel.getText() + "\nPaso " + interator + ": ");
        interator++;
    }//GEN-LAST:event_minPasoActionPerformed

    private void minLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minLimpiarActionPerformed
        txaPanel.setText("");
    }//GEN-LAST:event_minLimpiarActionPerformed

    private void lblImgRecetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImgRecetaMouseClicked
        rutaFile = gestorListaCocina.abrirImagen();
        lblImgReceta = gestorListaCocina.visualizadorImagen(lblImgReceta, rutaFile);
    }//GEN-LAST:event_lblImgRecetaMouseClicked

    private void minEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minEditarActionPerformed
        int row = jTable1.getSelectedRow();
        double res;
        if (jTable1.getSelectedRowCount() > 0) {
            String respuesta;
            respuesta = JOptionPane.showInputDialog(
                    null,
                    "Escriba el nuevo valor",
                    JOptionPane.QUESTION_MESSAGE
            );

            if (respuesta != null) {
                if (!respuesta.equals("")) {
                    try {
                        respuesta = respuesta.replace(" ", "");
                        res = Double.valueOf(respuesta);
                        jTable1.setModel(gestorListaCocina.editarMedidaFila(jTable1, listPrecio, row, res));
                        listPrecio.get(row)[1] = res;
                        gestorListaCocina.mensaje("Medida modificada corretamente", "Editar",0);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "No se reconoce como un numero", "Error", -1);
                    }

                }
            }
        }
    }//GEN-LAST:event_minEditarActionPerformed

    private void txtMedRecetaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedRecetaKeyTyped
        gestorListaCocina.consumir(evt, txtMedReceta.getText());
    }//GEN-LAST:event_txtMedRecetaKeyTyped

    private void rbtSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSumaActionPerformed
        if (rbtSuma.isSelected() == true) {
            txtMedReceta.setText(sumarMedidas() + "");
            txtMedReceta.setEditable(false);
        } else {
            txtMedReceta.setText("");
            txtMedReceta.setEditable(true);
        }
    }//GEN-LAST:event_rbtSumaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        vis.setBan(true);
    }//GEN-LAST:event_formWindowClosing

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        setVisible(false);
        vis.setBan(true);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txaPanelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaPanelKeyReleased
        if (evt.getKeyChar() == ' ') {
            gestorListaCocina.formatoJtexPanel(txaPanel);
        }
    }//GEN-LAST:event_txaPanelKeyReleased

    public void llenarcbx(Observer ven) {
        vis.addObserver(ven);
        cbxProducto.removeAllItems();
        cbxCategoria.removeAllItems();
        gestorListaCocina.getListaProducto().listaBoxProductos(cbxProducto);
        gestorListaCocina.getListaCategoria().listaBoxCategoria(cbxCategoria);
    }

    private double sumarMedidas() {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        double sum = 0;
        String can;

        for (int i = 0; i < modelo.getRowCount(); i++) {
            can = (modelo.getValueAt(i, 1) + "").replace(".", "");
            can = can.replace(",", ".");
            sum += Double.valueOf(can);
        }

        return sum;
    }

    private void guardarReceta() {
        Receta rec;
        Object[] productos;
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        rec = new Receta();

        rec.setNombreReceta(txtReceta.getText());
        rec.setPreparacion(txaPanel.getText());
        rec.setRuta(gestorListaCocina.copiarFichero(txtReceta.getText(), rutaFile, "ImagenReceta"));
        rec.setComplemento(chxComplemento.isSelected());

        if (rbtSuma.isSelected() == true) {
            rec.setCantidad(sumarMedidas());
        } else {
            rec.setCantidad(Double.valueOf(txtMedReceta.getText()));
        }

        for (int i = 0; i < listPrecio.size(); i++) {
            productos = listPrecio.get(i);
            rec.getProductos().add(new ProductoReceta((gestorListaCocina.getListaProducto().codigoProducto((String) productos[0])),
                    (Double.valueOf(productos[1] + "") / Double.valueOf(txtMedReceta.getText().replace(",", "."))))
            );
        }

        listPrecio.removeAll(listPrecio);

        if (edit == false) {
            gestorListaCocina.getListaCategoria().agregarReceta(cbxCategoria.getSelectedIndex(), rec);
            gestorListaCocina.mensaje("Receta Guardada Corretamente", "Receta",0);
        } else {
            rec.setCodigo(codigoRec);
            gestorListaCocina.getListaCategoria().editarReceta(rec, cat, rece);
            gestorListaCocina.mensaje("Receta modificada Corretamente", "Receta",0);
        }

        modelo.setRowCount(0);
        jTable1.setModel(modelo);

        setVisible(false);
        vis.setBan(true);
        txaPanel.setText("");
        txtReceta.setText("");
    }

    private void agregar() {

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        Object[] fila = gestorListaCocina.datosProductoReceta(cbxProducto.getSelectedItem().toString()
                , Double.valueOf(txtMedida.getText()));
        modelo.addRow(fila);
        listPrecio.add(fila);

        txtMedida.setText("");

        jTable1.setModel(modelo);

        if (rbtSuma.isSelected() == true) {
            txtMedReceta.setText(sumarMedidas() + "");
        }

    }

    public void editarReceta(int idxCategoria, int idxReceta) {
        setTitle("Editar Receta");
        btnGuardar.setText("Editar");
        edit = true;
        rece = idxReceta;
        cat = idxCategoria;
        cbxCategoria.setEnabled(false);

        Object[] receta = gestorListaCocina.getListaCategoria().obtenerReceta(idxCategoria, idxReceta);
        codigoRec = (int) receta[7];
        txtReceta.setText(receta[0] + "");
        txaPanel.setText(receta[2] + "");
        txtMedReceta.setText(receta[6] + "");
        chxComplemento.setSelected((boolean) receta[5]);
        lblImgReceta = gestorListaCocina.visualizadorImagen(lblImgReceta, receta[4] + "");

        jTable1.setModel(gestorListaCocina.obtenerTablaRecetaProductos(jTable1, idxCategoria,
                idxReceta,
                Double.valueOf(txtMedReceta.getText().replace(",", ".")))
        );
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        Object[] fila = new Object[2];

        for (int i = 0; i < modelo.getRowCount(); i++) {
            fila = new Object[2];
            fila[0] = modelo.getValueAt(i, 0);
            fila[1] = modelo.getValueAt(i, 1);
            listPrecio.add(fila);
        }

    }

    public void importarReceta(Receta rec) {
        setTitle("importar Receta");
        btnGuardar.setText("Guardar");
        rbtSuma.setEnabled(false);

        Object[] receta = rec.receta();
        txtReceta.setText(receta[0] + "");
        txaPanel.setText(receta[2] + "");
        txtMedReceta.setText(receta[6] + "");
        txtMedReceta.setEnabled(false);
        chxComplemento.setSelected((boolean) receta[5]);
        lblImgReceta = gestorListaCocina.visualizadorImagen(lblImgReceta, receta[4] + "");

        jTable1.setModel(gestorListaCocina.obtenerTablaRecetaImportado(jTable1, rec));

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        Object[] fila = new Object[2];

        for (int i = 0; i < modelo.getRowCount(); i++) {
            fila = new Object[2];
            fila[0] = modelo.getValueAt(i, 0);
            fila[1] = modelo.getValueAt(i, 1);
            listPrecio.add(fila);
        }

    }

    public void pruebaReceta() {
        Receta rec = new Receta();

        Categoria prueba = new Categoria();
        prueba.setCategoria("Tortas fria");
        gestorListaCocina.getListaCategoria().agregarCategoria(prueba);

        prueba = new Categoria();
        prueba.setCategoria("Pastel");
        gestorListaCocina.getListaCategoria().agregarCategoria(prueba);

        prueba = new Categoria();
        prueba.setCategoria("Pan");
        gestorListaCocina.getListaCategoria().agregarCategoria(prueba);

        prueba = new Categoria();
        prueba.setCategoria("Otros");
        gestorListaCocina.getListaCategoria().agregarCategoria(prueba);

        rec.setNombreReceta("Genovesa");
        rec.setCantidad(500);
        rec.setPreparacion("xxxxxxxxxxx xxxxxxxxxxxxx xxxxxxxxxxxxx");
        rec.setRuta("");
        rec.setComplemento(false);

        int cod = gestorListaCocina.getListaProducto().codigoProducto("Crema leche");
        rec.getProductos().add(new ProductoReceta(cod, (800.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Lechera");
        rec.getProductos().add(new ProductoReceta(cod, (300.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Leche entera");
        rec.getProductos().add(new ProductoReceta(cod, (800.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Huevo");
        rec.getProductos().add(new ProductoReceta(cod, (10.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Esencia");
        rec.getProductos().add(new ProductoReceta(cod, (5.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Azucar");
        rec.getProductos().add(new ProductoReceta(cod, (250.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Harina");
        rec.getProductos().add(new ProductoReceta(cod, (250.0 / rec.getCantidad())));

        rec.setFecha(gestorListaCocina.fecha());

        //Caliente
        gestorListaCocina.getListaCategoria().agregarReceta(3, rec);

        rec = new Receta();

        rec.setNombreReceta("Normal");
        rec.setCantidad(500);
        rec.setPreparacion("xxxxxxxxxxx xxxxxxxxxxxxx xxxxxxxxxxxxx");
        rec.setRuta("");
        rec.setComplemento(false);

        cod = gestorListaCocina.getListaProducto().codigoProducto("Margarina DG");
        rec.getProductos().add(new ProductoReceta(cod, (500.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Bicarbonato");
        rec.getProductos().add(new ProductoReceta(cod, (3.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Esencia");
        rec.getProductos().add(new ProductoReceta(cod, (10.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Yogurt");
        rec.getProductos().add(new ProductoReceta(cod, (150.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Huevo");
        rec.getProductos().add(new ProductoReceta(cod, (10.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Azucar");
        rec.getProductos().add(new ProductoReceta(cod, (500.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Harina");
        rec.getProductos().add(new ProductoReceta(cod, (500.0 / rec.getCantidad())));

        rec.setFecha(gestorListaCocina.fecha());

        gestorListaCocina.getListaCategoria().agregarReceta(2, rec);

        //chocolate
        rec = new Receta();

        rec.setNombreReceta("Mezcla Chocolate");
        rec.setCantidad(350);
        rec.setPreparacion("xxxxxxxxxxx xxxxxxxxxxxxx xxxxxxxxxxxxx");
        rec.setRuta("");
        rec.setComplemento(true);

        cod = gestorListaCocina.getListaProducto().codigoProducto("Crema leche");
        rec.getProductos().add(new ProductoReceta(cod, (100.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Chocolate");
        rec.getProductos().add(new ProductoReceta(cod, (150.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Leche entera");
        rec.getProductos().add(new ProductoReceta(cod, (100.0 / rec.getCantidad())));

        rec.setFecha(gestorListaCocina.fecha());

        gestorListaCocina.getListaCategoria().agregarReceta(0, rec);

        //crema noral
        rec = new Receta();

        rec.setNombreReceta("Merenge");
        rec.setPreparacion("xxxxxxxxxxx xxxxxxxxxxxxx xxxxxxxxxxxxx");
        rec.setCantidad(500);
        rec.setRuta("");
        rec.setComplemento(true);

        cod = gestorListaCocina.getListaProducto().codigoProducto("Hy-vol");
        rec.getProductos().add(new ProductoReceta(cod, (70.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Azucar pulverizada");
        rec.getProductos().add(new ProductoReceta(cod, (150.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Azucar");
        rec.getProductos().add(new ProductoReceta(cod, (375.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Agua");
        rec.getProductos().add(new ProductoReceta(cod, (250.0 / rec.getCantidad())));

        rec.setFecha(gestorListaCocina.fecha());

        gestorListaCocina.getListaCategoria().agregarReceta(0, rec);

        rec = new Receta();

        rec.setNombreReceta("Bizcocho Marmolado");
        rec.setPreparacion("xxxxxxxxxxx xxxxxxxxxxxxx xxxxxxxxxxxxx");
        rec.setCantidad(250);
        rec.setRuta("");
        rec.setComplemento(false);

        cod = gestorListaCocina.getListaProducto().codigoProducto("Azucar");
        rec.getProductos().add(new ProductoReceta(cod, (150.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Bicarbonato");
        rec.getProductos().add(new ProductoReceta(cod, (3.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Cocoa");
        rec.getProductos().add(new ProductoReceta(cod, (15.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Esencia");
        rec.getProductos().add(new ProductoReceta(cod, (10.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Harina");
        rec.getProductos().add(new ProductoReceta(cod, (250.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Huevo");
        rec.getProductos().add(new ProductoReceta(cod, (4.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Leche entera");
        rec.getProductos().add(new ProductoReceta(cod, (50.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Levadura");
        rec.getProductos().add(new ProductoReceta(cod, (45.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Margarina DG");
        rec.getProductos().add(new ProductoReceta(cod, (125.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Sal");
        rec.getProductos().add(new ProductoReceta(cod, (0.3 / rec.getCantidad())));

        rec.setFecha(gestorListaCocina.fecha());

        gestorListaCocina.getListaCategoria().agregarReceta(2, rec);

        rec = new Receta();
        rec.setNombreReceta("Tres leche");
        rec.setCantidad(500);
        rec.setPreparacion("xxxxxxxxxxx xxxxxxxxxxxxx xxxxxxxxxxxxx");
        rec.setRuta("");
        rec.setComplemento(false);

        cod = gestorListaCocina.getListaProducto().codigoProducto("Azucar");
        rec.getProductos().add(new ProductoReceta(cod, (250.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Bicarbonato");
        rec.getProductos().add(new ProductoReceta(cod, (2.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Crema leche");
        rec.getProductos().add(new ProductoReceta(cod, (250.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Esencia");
        rec.getProductos().add(new ProductoReceta(cod, (5.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Harina");
        rec.getProductos().add(new ProductoReceta(cod, (500.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Huevo");
        rec.getProductos().add(new ProductoReceta(cod, (8.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Leche en polvo");
        rec.getProductos().add(new ProductoReceta(cod, (250.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Lechera");
        rec.getProductos().add(new ProductoReceta(cod, (250.0 / rec.getCantidad())));

        rec.setFecha(gestorListaCocina.fecha());

        //Caliente
        gestorListaCocina.getListaCategoria().agregarReceta(2, rec);

        rec = new Receta();
        rec.setNombreReceta("Pan de sal");
        rec.setCantidad(1799);
        rec.setPreparacion("xxxxxxxxxxx xxxxxxxxxxxxx xxxxxxxxxxxxx");
        rec.setRuta("");
        rec.setComplemento(false);

        cod = gestorListaCocina.getListaProducto().codigoProducto("Agua");
        rec.getProductos().add(new ProductoReceta(cod, (200.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Azucar");
        rec.getProductos().add(new ProductoReceta(cod, (131.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Esencia");
        rec.getProductos().add(new ProductoReceta(cod, (14.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Fecula");
        rec.getProductos().add(new ProductoReceta(cod, (42.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Harina");
        rec.getProductos().add(new ProductoReceta(cod, (1000.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Huevo");
        rec.getProductos().add(new ProductoReceta(cod, (3.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Leche en polvo");
        rec.getProductos().add(new ProductoReceta(cod, (22.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Levadura");
        rec.getProductos().add(new ProductoReceta(cod, (17.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Manteca");
        rec.getProductos().add(new ProductoReceta(cod, (267.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Margarina DG");
        rec.getProductos().add(new ProductoReceta(cod, (83.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Sal");
        rec.getProductos().add(new ProductoReceta(cod, (20.0 / rec.getCantidad())));

        rec.setFecha(gestorListaCocina.fecha());

        gestorListaCocina.getListaCategoria().agregarReceta(1, rec);
        
        
        rec = new Receta();
        rec.setNombreReceta("Pan mantequilla");
        rec.setCantidad(1764);
        rec.setPreparacion("xxxxxxxxxxx xxxxxxxxxxxxx xxxxxxxxxxxxx");
        rec.setRuta("");
        rec.setComplemento(false);

        cod = gestorListaCocina.getListaProducto().codigoProducto("Agua");
        rec.getProductos().add(new ProductoReceta(cod, (200.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Azucar");
        rec.getProductos().add(new ProductoReceta(cod, (140.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Esencia");
        rec.getProductos().add(new ProductoReceta(cod, (10.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Fecula");
        rec.getProductos().add(new ProductoReceta(cod, (40.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Harina");
        rec.getProductos().add(new ProductoReceta(cod, (1000.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Huevo");
        rec.getProductos().add(new ProductoReceta(cod, (2.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Leche en polvo");
        rec.getProductos().add(new ProductoReceta(cod, (16.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Levadura");
        rec.getProductos().add(new ProductoReceta(cod, (16.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Manteca");
        rec.getProductos().add(new ProductoReceta(cod, (240.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Margarina DG");
        rec.getProductos().add(new ProductoReceta(cod, (80.0 / rec.getCantidad())));

        cod = gestorListaCocina.getListaProducto().codigoProducto("Sal");
        rec.getProductos().add(new ProductoReceta(cod, (20.0 / rec.getCantidad())));

        rec.setFecha(gestorListaCocina.fecha());

        //Caliente
        gestorListaCocina.getListaCategoria().agregarReceta(1, rec);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarReceta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarReceta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarReceta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistrarReceta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaRegistrarReceta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cbxCategoria;
    private javax.swing.JComboBox<String> cbxProducto;
    private javax.swing.JCheckBox chxComplemento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblImgReceta;
    private javax.swing.JMenuItem minEditar;
    private javax.swing.JMenuItem minLimpiar;
    private javax.swing.JMenuItem minPaso;
    private javax.swing.JMenuItem minRem;
    private javax.swing.JMenuItem minRemAll;
    private javax.swing.JPopupMenu pmeTbl;
    private javax.swing.JPopupMenu popuTxp;
    private javax.swing.JRadioButton rbtSuma;
    private javax.swing.JTextPane txaPanel;
    private javax.swing.JTextField txtMedReceta;
    private javax.swing.JTextField txtMedida;
    private javax.swing.JTextField txtReceta;
    // End of variables declaration//GEN-END:variables
}
